"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
"query swfProjectFormView($table: String!, $sysId: String!, $views: String!, $query: String!, $workspaceConfigId: String) {  \nGlideRecordDomainQuery_Query {    \nuiDomain(table: $table, sysId: $sysId, query: $query) {      \ntableDisplayValue      \nrecordValues {        \nname        \nvalue        \ndisplayValue        \nvaluesList \n{         \n value          \n displayValue        \n }      \n }      \n domainElementData {        \n dictionaryData {          \n label          \n name          \n internalType        \n }        \n ... on GlideRecordDomainQuery_ReferenceElementType \n {          \n reference         \n  useReferenceQualifier        \n  }      \n  }    \n  }  \n  }  \n  GlideViewQuery_Query {    \n  uiView(table: $table, views: $views, sysId: $sysId, workspaceConfigId: $workspaceConfigId, query: $query) {      isWhitelistedForEdit      view      glideLayoutItem(table: $table, sysId: $sysId, query: $query) {        _query {          headerConfig: GlideHeaderQuery_Query {            headerItems(table: $table, sysId: $sysId, workspaceConfigId: $workspaceConfigId) {              headerSysId              recordDisplayValue              tableDisplayValue              hideTags              primaryItem {                fieldName                fieldLabel                displayValue              }              subheadingItem {                fieldName                fieldLabel                displayValue              }              headerImageItem {                fieldName                fieldLabel                headerImage              }              secondaryItems {                fieldName                fieldLabel                displayValue                highlightedValueStyle {                  field                  value                  status                  showIcon                }                referenceItem {                  table                  sysId                }              }            }          }          GlideViewableTagQuery_Query {            viewableRecordTags(table: $table, sysId: $sysId) {              canCreateGlobalTags              enabled              records {                name                canEdit                sysId                viewableBy                labelEntry              }            }          }          GlideDeclarativeActions_Query {            GlideDeclarativeActions_formQuery {              formDeclarativeActions(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query, source: \"form\", workspaceConfigId: $workspaceConfigId) {                formActions {                  position                  actions {                    name                    icon                    label                    tooltip                    actionComponent                    actionAttributes                    order                    assignmentId                    modelConditions {                      field                      operator                      value                      newQuery                      or                    }                    payloadMap {                      name                      value                    }                  }                }              }            }          }          GlideAttachmentQuery_Query {            attachments(table: $table, sysId: $sysId) {              canCreate            }          }          GlideUIAction_Query {            uiActions(table: $table, sysId: $sysId, query: $query, view: \"$$parent.viewName$$\", workspaceConfigId: $workspaceConfigId) {              messages {                name                value              }              actionNodes {                ... on GlideUIAction_UIAction {                  label                  name                  sysId                  order                  hasClientScript                  clientScript                  type                  style                  hint                }                ... on GlideUIAction_UIActionGroupLayout {                  label                  overflow                  type                  style                  order                  groupActions {                    label                    name                    sysId                    order                    hasClientScript                    clientScript                    type                    style                    hint                  }                }              }            }          }          GlideClientScriptingEnvironment_Query {            ClientScriptingEnvironment_Globals(table: $table, sysId: $sysId, query: $query) {              g_scratchpad              g_language              g_date_time_format              g_decimal_separator              g_user_grouping              g_text_direction              g_is_accessible            }            ClientScriptingEnvironment_Scripts(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query) {              onLoad {                name                sysId                script                type                fieldName                tableName              }              onChange {                name                sysId                script                type                fieldName                tableName              }              onSubmit {                name                sysId                script                type                fieldName                tableName              }              messages {                name                value              }            }            ClientScriptingEnvironment_Policies(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query) {              shortDescription              sysId              reverse              onLoad              isRunScripts              preEvaluated              preEvaluatedResult              scriptTrue {                name                script              }              scriptFalse {                name                script              }              actions {                visible                name                disabled                mandatory                cleared: clearValue                relatedList              }              conditions {                type                term                field: fieldName                fieldLabel                columnType                value                oper: operator                operatorLabel                or: isOrQuery                newquery: isNewQuery                preEvaluatedTerm                preEvaluatedTermResult                referenceFields {                  table                  fieldName                  fieldLabel                  internalType                  referenceTable                }              }            }            CatalogClientScriptingEnvironment_Scripts(table: $table, sysId: $sysId, query: $query) {              onLoad {                name                sysId                script                type                fieldName                tableName              }              onChange {                name                sysId                script                type                fieldName                tableName              }              onSubmit {                name                sysId                script                type                fieldName                tableName              }              messages {                name                value              }            }            CatalogClientScriptingEnvironment_Policies(table: $table, sysId: $sysId, query: $query) {              shortDescription              sysId              scriptTrue {                name                script              }              scriptFalse {                name                script              }              reverse              onLoad              isRunScripts              preEvaluated              preEvaluatedResult              actions {                visible                name                disabled                mandatory                cleared: clearValue                relatedList              }              conditions {                term                field: fieldName                fieldLabel                type                columnType                value                oper: operator                operatorLabel                catalogVariable                catalogOperator                catalogVariableType                catalogVariableTable                or: isOrQuery                newquery: isNewQuery                preEvaluatedTerm                preEvaluatedTermResult                referenceFields {                  table                  fieldName                  fieldLabel                  internalType                  referenceTable                }              }            }          }          GlideDeclarativeActions_Query {            GlideDeclarativeActions_fieldQuery {              fieldDeclarativeActions(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query, source: \"field\", workspaceConfigId: $workspaceConfigId) {                fieldActions {                  field                  actions {                    name                    icon                    label                    dependency                    requiresValue                    order                    conditions                    actionType                    actionComponent                    actionDispatch                    actionPayload                    actionAttributes                    groupBy                    group                    assignmentId                    confirmationRequired                    confirmationMessage                    tooltip                    modelConditions {                      field                      operator                      value                      newQuery                      or                    }                    payloadMap {                      name                      value                    }                  }                }              }            }          }          GlideLayout_Query {            formLayout(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query) {              baseTable              table              isValidRecord              canReadRecord              isScriptableTable              lastErrorMessage              domainSeparation {                canExpandScope                determiningFieldName                domainId              }              sectionLayout {                sysId                caption                captionDisplay                rows {                  fields                }              }              formSettings {                isDetailsHidden                isSectionMenuHidden                isSectionCollapseDisabled                defaultSection {                  sysId                  caption                  captionDisplay                }              }              formTabs {                isDefaultTabOrder                defaultTabFocus                tabsOrder {                  label                  value                }              }              encodedRecord              sysId              recordValues {                name                value                displayValue                valuesList {                  value                  displayValue                }              }              fieldStates {                name                hidden                mandatory                readonly              }              relatedLists {                sourceTable                targetTable                count                filter                displayLabel                label                value                relatedField              }              formatters {                name                sys_id              }              annotations {                sysId                text                annotationType                typeDisplayValue                isPlainText              }              variablesLayout {                name                type                parent                ... on GlideLayout_ContainerVariableFieldLayoutType {                  caption                  captionDisplay                  layout                  columns {                    fields {                      name                      type                    }                  }                }              }              elementsData {                name: elementName                dictionary: dictionaryData {                  type: dictionaryType                  dependentField                  dependentTable                  name                  label                  canWrite                  canRead                  canCreate                  internalType                  isMandatory                  sys_readonly: sysReadonly                  attributes {                    name                    value                  }                }                ... on GlideLayout_ChoiceElementType {                  choices {                    displayValue                    value                  }                }                ... on GlideLayout_FileAttachmentElementType {                  value                  displayValue                  state                  contentType                }                ... on GlideLayout_TableNameElementType {                  displayValue                }                ... on GlideLayout_CurrencyElementType {                  value                  code                  defaultCurrency                  currencyCodes {                    code                    symbol                  }                }                ... on GlideLayout_PhoneNumberElementType {                  value                  country                  countryCodes {                    code                    name                  }                }                ... on GlideLayout_GlideListElementType {                  reference                }                ... on GlideLayout_ReferenceElementType {                  reference                  referenceQualifier                  referenceKey                  useReferenceQualifier                  dependent                  dependentOnField                  refAutoCompleter                  refAcOrderBy                  refAcColumns                  refAcColumnsSearch                  refAcDisplayValue                  refQualElements                  refContributions                  isDynamicCreate                  isReferenceScriptableTable                  referenceError                }                ... on GlideLayout_VariablesElementType {                  variables: _elements {                    ... on GlideLayout_MultiRowVariableSetType {                      type                      name                      variableName                      label                      containerType                      canRead                      canWrite                      canCreate                      id                      maxRows                      fields {                        name                        id                        label                        type                      }                      rowData {                        row {                          id                          name                          value                          displayValue                        }                      }                    }                    ... on GlideLayout_SingleRowVariableSetType {                      type                      id                      name                      label                      containerType                      canRead                      canWrite                      canCreate                      variableName                    }                    ... on GlideLayout_ChoiceQuestionElementType {                      type                      id                      name                      variableName                      label                      order                      catalogItem                      variableSet                      mandatory                      canRead                      canWrite                      canCreate                      variableAttributes                      defaultValue                      lookupTable                      lookupValue                      lookupLabel                      includeNone                      lookupUnique                      choiceTable                      choiceField                      choiceDirection                      choices {                        displayValue: label                        value                      }                      dependentField                      referringTable                      referringRecordId                    }                    ... on GlideLayout_ReferenceQuestionElementType {                      type                      id                      name                      variableName                      label                      order                      catalogItem                      variableSet                      mandatory                      canRead                      canWrite                      canCreate                      reference                      referenceQual                      listTable                      useReferenceQualifier                      variableAttributes                      defaultValue                      referringTable                      referringRecordId                    }                    ... on GlideLayout_ContainerQuestionElementType {                      type                      id                      name                      variableName                      label                      order                      catalogItem                      variableSet                      displayTitle                      layout                      containerType                      canRead                      canWrite                      canCreate                      mandatory                    }                    ... on GlideLayout_StandardQuestionElementType {                      type                      id                      name                      variableName                      label                      order                      catalogItem                      variableSet                      mandatory                      canRead                      canWrite                      canCreate                      variableAttributes                      defaultValue                      exampleText                      useConfirmation                      regExp                      canDecrypt                    }                    ... on GlideLayout_AttachmentQuestionElementType {                      type                      id                      name                      variableName                      label                      order                      catalogItem                      variableSet                      mandatory                      canRead                      canWrite                      canCreate                      variableAttributes                      defaultValue                      contentType                    }                  }                }                ... on GlideLayout_ValueElementType {                  maxLength                  defaultRows                }                ... on GlideLayout_GlideVarElementType {                  modelTable                  glidevars: _elements {                    name: elementName                    dictionary: dictionaryData {                      type: dictionaryType                      dependentField                      dependentTable                      name                      label                      canWrite                      canRead                      canCreate                      internalType                      isMandatory                      sys_readonly: sysReadonly                      attributes {                        name                        value                      }                    }                    ... on GlideLayout_ChoiceElementType {                      choices {                        displayValue                        value                      }                    }                    ... on GlideLayout_CurrencyElementType {                      value                      code                      defaultCurrency                      currencyCodes {                        code                        symbol                      }                    }                    ... on GlideLayout_PhoneNumberElementType {                      value                      country                      countryCodes {                        code                        name                      }                    }                    ... on GlideLayout_GlideListElementType {                      reference                    }                    ... on GlideLayout_ReferenceElementType {                      reference                      referenceQualifier                      referenceKey                      useReferenceQualifier                      dependent                      dependentOnField                      refAutoCompleter                      refAcOrderBy                      refAcColumns                      refAcColumnsSearch                      refAcDisplayValue                      refQualElements                      refContributions                      isDynamicCreate                      isReferenceScriptableTable                      referenceError                    }                    ... on GlideLayout_ValueElementType {                      maxLength                      defaultRows                    }                  }                }              }            }          }          GlideDataLookupQuery_Query {            dataLookup(table: $table) {              fields {                field                definitions {                  name                  sysId                }              }            }            catalogDataLookup(targetTable: $table, targetId: $sysId) {              fields {                field                definitions {                  name                  sysId                }              }            }          }          GlideDomain_Query {            user {              preferences(name: [\"workspace.layout.type.x_mobi_swf_item\", \"workspace.layout.form_ratio.x_mobi_swf_item\", \"workspace.layout.sidebar_ratio.x_mobi_swf_item\"]) {                name                value              }              roles              allRoles              groups              groupList {                groupId                name              }              sys_id              userName              firstName              lastName              title              avatar              departmentId              email            }          }          GlideFieldValidator_Query {            validators(table: $table, sysId: $sysId, view: \"$$parent.viewName$$\") {              validationScripts {                internalType                script: validator                description                fields              }            }          }          GlideUIScript_Query {            uiScripts {              scripts {                name                description                script                sysId              }            }          }          GlideRegisteredModalQuery_Query {            registeredModals {              modals {                component                namespace                api              }            }          }          GlideDomain_Query {            session {              notifications {                type                text                notificationType                notificationAttributes {                  attributeName                  attributeValue                }                childNotifications {                  type                  text                  notificationType                }              }            }          }          GlideActivity_Query {            getStream(table: $table, sysId: $sysId, view: \"$$parent.viewName$$\") {              sysTimestamp              isDelta              entries {                type                sysCreatedOnAdjusted                sysCreatedBy                userImage                initials                fieldColor                sysId: uid                entryItem {                  ... on GlideActivity_AuditType {                    auditValues {                      fieldLabel                      newValue                      oldValue                      htmlNewValue                      htmlOldValue                      type                    }                    __typename                  }                  ... on GlideActivity_JournalType {                    fieldLabel                    fieldName                    sanitizeHtmlValue                    __typename                  }                  ... on GlideActivity_AttachmentType {                    sysId                    fileName                    state                    downloadPath                    imagePath                    sizeBytes                    contentType                    extension                    __typename                  }                  ... on GlideActivity_EmailType {                    fields {                      subject                      user                      recipients                      copied                      type                    }                    displayPath                    __typename                  }                }              }              fields {                isSelected: active                label                name              }            }          }          AppRibbonConfig_Query {            ribbonConfig: getRibbonConfig(sourceTable: $table, workspaceConfigId: $workspaceConfigId) {              _results {                table {                  value                  displayValue                }                name {                  value                  displayValue                }                attrs {                  variables {                    variableName                    variableValue                  }                }                component {                  value                  displayValue                }                tag {                  value                  displayValue                }                width {                  value                  displayValue                }                order {                  value                  displayValue                }              }            }          }        }      }    }  }}";
